This file is parsed by the program to set the preferences. The first char right of the equal sign is a value.


1.Display unreferenced variables/functions/constants warning.
0 is Hide; 1 is Show
warnings=1

overflow

hidden

w as e

2.Log file. This option creates a file with string lines.
0 is No; 1 is Yes
logfile=1

3.Take the following action at FUNCTION entries at the object format that are not referred in the object and when the reference warning is enabled.
[if warnings is 1]
0 is Ignore them; 1 is Print/Show warning; 2 [if logfile is 1] is Write them to the logfile (this will also log import functions), else take 1
codeFnObj=2

4.CONST to unreferenced warnings, same as with FUNCTION
[if warnings is 1]
0 is Ignore them; 1 is Print/Show warning; 2 [if logfile is 1] is Write them to the logfile (this will also log used constants), else take 1
const_warn=2

5. Log the folder path to the main file, the main file and the INCLUDE files.
[if logfile is 1]
	[if includedir is 1]: The file entries are followed by the name of the previous active folder, where the program will restore when the file is parsed.
0 is No; 1 is Yes
logincludes=1

6.Include active folder. Change the active directory when including and stepping into a file.
0 is No; 1 is Yes
includedir=1

7.Write the function names above the function in code section, useful when debugging asm instructions.
0 is No; 1 is Yes
function_name=0

8.Ignore elfobj64
0 is No,use linux convention if ocompiler was compiled for linux,else use microsoft; 1 is Yes; 2 is No,and cross-compile
neg_64=0

9.Zeroset reserved CHARS/DATA/STR
0 is No; 1 is Yes
nul_res_pref=0

9.sd as sv (old programs don't have sv and may be with 64 logic)
0 is No; 1 is Yes
sd_as_sv=0